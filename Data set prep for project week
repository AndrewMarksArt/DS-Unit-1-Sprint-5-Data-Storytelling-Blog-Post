{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled11.ipynb",
      "version": "0.3.2",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xYs2TJh1gHir",
        "colab_type": "text"
      },
      "source": [
        "##Data sets for project week\n",
        "There are 2 data sets that I will be using.\n",
        "\n",
        "\n",
        "1.   Artwork list scrapped from the artists website at http://damienhirst.com/ which will be used in place of an offical catalog raisonne.\n",
        "2.   Auction history scrapped from Mutual Art's Auction Price Database https://www.mutualart.com/ \n",
        "\n",
        "The data has not been cleaned yet, here is a partial cleaning to do list:\n",
        "\n",
        "\n",
        "1.   ~~remove year from Title column in auction_history df~~\n",
        "2.   ~~remove circa and ranges for data created column~~\n",
        "3.   turn size into heigth, width, and depth columns\n",
        "4.   make signed either Y/N and add a column for any edition numbers\n",
        "5.   ~~turn estimate range into low estimate, high estimate, and currency~~\n",
        "6.   ~~remove currency from realized price~~\n",
        "7.   convert estimates and realized prices to USD\n",
        "8.   create a location/region column using auction house (New York, London, Paris, etc. or US, UK, EU, etc.)\n",
        "9.   use cleaned Titles column to merge the Series column from the raisonne csv to the auction history df\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RguumdI4eYki",
        "colab_type": "text"
      },
      "source": [
        "###Import libraries needed, load the data and printout the first few rows"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iiCI9HIDbzW3",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4xce9dCSeHAQ",
        "colab_type": "code",
        "outputId": "4f2185de-5525-436a-a2f7-b9868e5d321a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "raisonne = pd.read_csv('https://raw.githubusercontent.com/AndrewMarksArt/DS-Unit-1-Sprint-5-Data-Storytelling-Blog-Post/master/DamienHist_artwork_list.csv')\n",
        "raisonne.head()"
      ],
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Title</th>\n",
              "      <th>Year</th>\n",
              "      <th>Size</th>\n",
              "      <th>Materials and Medium</th>\n",
              "      <th>Series</th>\n",
              "      <th>Link to Image</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Emergency</td>\n",
              "      <td>2014</td>\n",
              "      <td>2438 x 2134 mm | 96 x 84 in</td>\n",
              "      <td>Flexible retroreflective and fluorescent non-r...</td>\n",
              "      <td>Emergency Paintings</td>\n",
              "      <td>http://damienhirst.com/images/hirstimage/Emerg...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Trauma</td>\n",
              "      <td>2016</td>\n",
              "      <td>305 x 305 mm | 12 x 12 in</td>\n",
              "      <td>Flexible PVC vehicle vinyl and lacquer on canvas</td>\n",
              "      <td>Emergency Paintings</td>\n",
              "      <td>http://damienhirst.com/images/hirstimage/Traum...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Police</td>\n",
              "      <td>2014</td>\n",
              "      <td>2438 x 2134 mm | 96 x 84 in</td>\n",
              "      <td>Flexible crystal grade micro prismatic vinyl o...</td>\n",
              "      <td>Emergency Paintings</td>\n",
              "      <td>http://damienhirst.com/images/hirstimage/Polic...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Up</td>\n",
              "      <td>2015</td>\n",
              "      <td>305 x 305 mm | 12 x 12 in</td>\n",
              "      <td>Flexible crystal grade micro prismatic vinyl o...</td>\n",
              "      <td>Emergency Paintings</td>\n",
              "      <td>http://damienhirst.com/images/hirstimage/Up_1_...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Injury</td>\n",
              "      <td>2016</td>\n",
              "      <td>130 x 565 mm | 5.1 x 22.2 in</td>\n",
              "      <td>Flexible crystal grade micro prismatic vinyl a...</td>\n",
              "      <td>Emergency Paintings</td>\n",
              "      <td>http://damienhirst.com/images/hirstimage/Injur...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Title  ...                                      Link to Image\n",
              "0  Emergency  ...  http://damienhirst.com/images/hirstimage/Emerg...\n",
              "1     Trauma  ...  http://damienhirst.com/images/hirstimage/Traum...\n",
              "2     Police  ...  http://damienhirst.com/images/hirstimage/Polic...\n",
              "3         Up  ...  http://damienhirst.com/images/hirstimage/Up_1_...\n",
              "4     Injury  ...  http://damienhirst.com/images/hirstimage/Injur...\n",
              "\n",
              "[5 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Jveol8hqSx2K",
        "colab_type": "code",
        "outputId": "62277da1-7aca-40ad-e071-ce2daf94940b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "raisonne.shape"
      ],
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(858, 6)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AaOpUg-SeSr3",
        "colab_type": "code",
        "outputId": "1f184a94-67a0-474d-9b9d-ac5ad14cff31",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 289
        }
      },
      "source": [
        "auction_history = pd.read_csv('https://raw.githubusercontent.com/AndrewMarksArt/DS-Unit-1-Sprint-5-Data-Storytelling-Blog-Post/master/Damien_Hirst_Auction_Results.csv')\n",
        "auction_history.drop('ID_Batch_Loop#', axis=1, inplace=True)\n",
        "auction_history.head()"
      ],
      "execution_count": 149,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Artist_Name</th>\n",
              "      <th>Title</th>\n",
              "      <th>Date_Created</th>\n",
              "      <th>Medium</th>\n",
              "      <th>Size</th>\n",
              "      <th>Signed_Edition</th>\n",
              "      <th>Estimate_Range</th>\n",
              "      <th>Realized_Price</th>\n",
              "      <th>Sale</th>\n",
              "      <th>Auction_House</th>\n",
              "      <th>Sale_Date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>SPOT DRAWING NO. 2, 1990</td>\n",
              "      <td>1990</td>\n",
              "      <td>coloured pencil on paper</td>\n",
              "      <td>84.1 by 59.7 cm. 33 1/8 by 23 1/2 in</td>\n",
              "      <td>Signed</td>\n",
              "      <td>80,000 - 120,000 GBP</td>\n",
              "      <td>175,000 GBP</td>\n",
              "      <td>Contemporary Art Day Auction</td>\n",
              "      <td>Sotheby's London</td>\n",
              "      <td>Jun. 27, 2018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>Supreme Skate Deck Red #7, 1987</td>\n",
              "      <td>1987</td>\n",
              "      <td>Color silkscreen on plywood in original</td>\n",
              "      <td>31.25 x 8 inches</td>\n",
              "      <td>from an edition of 500</td>\n",
              "      <td>800 - 1,200 USD</td>\n",
              "      <td>450 USD*</td>\n",
              "      <td>Public Art Auction: Modern &amp; Contemporary Art,...</td>\n",
              "      <td>Santa Monica Auctions</td>\n",
              "      <td>Jun. 04, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>Supreme Skate Deck Yellow #6, 1987</td>\n",
              "      <td>1987</td>\n",
              "      <td>Color silkscreen on plywood in original bag</td>\n",
              "      <td>31.25 x 8 inches</td>\n",
              "      <td>from an edition of 500</td>\n",
              "      <td>800 - 1,200 USD</td>\n",
              "      <td>475 USD*</td>\n",
              "      <td>Public Art Auction: Modern &amp; Contemporary Art,...</td>\n",
              "      <td>Santa Monica Auctions</td>\n",
              "      <td>Jun. 04, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>Pharmacy, circa1990</td>\n",
              "      <td>circa1990</td>\n",
              "      <td>offset lithograph printed in colours</td>\n",
              "      <td>216 x 216 mm (8 1/2 x 8 1/2 in)</td>\n",
              "      <td>42/200</td>\n",
              "      <td>1,500 - 2,000 GBP</td>\n",
              "      <td>1,500 GBP</td>\n",
              "      <td>Mixed Media: 20th Century Art</td>\n",
              "      <td>Dreweatts &amp; Bloomsbury Auctions, Bloomsbury House</td>\n",
              "      <td>Jul. 16, 2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>The Complete Spot Paintings, 1986-2011</td>\n",
              "      <td>1986-2011</td>\n",
              "      <td>with butterfly and heart drawing on the slipca...</td>\n",
              "      <td>305 x 244mm</td>\n",
              "      <td>Signed</td>\n",
              "      <td>1,000 - 1,500 GBP</td>\n",
              "      <td>2,375 GBP</td>\n",
              "      <td>Prints &amp; Multiples</td>\n",
              "      <td>Bonhams Knightsbridge</td>\n",
              "      <td>Jun. 03, 2015</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Artist_Name  ...      Sale_Date\n",
              "0  Damien Hirst  ...  Jun. 27, 2018\n",
              "1  Damien Hirst  ...  Jun. 04, 2017\n",
              "2  Damien Hirst  ...  Jun. 04, 2017\n",
              "3  Damien Hirst  ...  Jul. 16, 2015\n",
              "4  Damien Hirst  ...  Jun. 03, 2015\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 149
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PsmWpi2JS5vB",
        "colab_type": "code",
        "outputId": "ca0c7e8b-54a2-4667-9ab9-bf2ed96eb08b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "auction_history.shape"
      ],
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(6541, 11)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HOYZJj_aemvK",
        "colab_type": "text"
      },
      "source": [
        "### Cleaning Functions"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MWUGAQyQV9bN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# functions for cleaning columns in the auction history dataframe\n",
        "\n",
        "def clean_auction_title(titles):\n",
        "  \"\"\"\n",
        "  takes a list, the title column from the auction history dataframe, loops through \n",
        "  the titles and removes the date and 'FullFormat' that is at the end of the \n",
        "  art works title.\n",
        "  :param: titles = list\n",
        "  return: list, cleaned titles with dates removed\n",
        "  \"\"\"\n",
        "  for i in range(len(titles)):\n",
        "    titles[i] = titles[i][:-6]\n",
        "    \n",
        "    if 'FullFormat' in auction_history['Title'][i]:\n",
        "      pos = (auction_history['Title'][i].find('FullFormat') -2)\n",
        "      auction_history['Title'][i] = auction_history['Title'][i][:pos]\n",
        "    \n",
        "  return titles"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XHwXO9fw7WXN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def clean_date_created(dates):\n",
        "  \"\"\"\n",
        "  takes a list, the date created column from the auction history dataframe, loops\n",
        "  through the list to find elements that need to be removed so only the year is left.\n",
        "  :param: dates = list\n",
        "  return: list, cleaned list of years with all string elements removed\n",
        "  \"\"\"\n",
        "  for i in range(len(dates)):\n",
        "    year = dates[i]\n",
        "    \n",
        "    if 'FullFOrmat' in year:\n",
        "      year = year[-4:]\n",
        "      \n",
        "    if 'circa' or 'Circa' in year:\n",
        "      year = year[-4:]\n",
        "      \n",
        "    if '-' in year:\n",
        "      if int(year[-2:]) > 20:\n",
        "        year = int(str(19)+str(year[-2:]))\n",
        "      else:\n",
        "        year = int(str(20)+str(year[-2:]))\n",
        "        \n",
        "    if year == '000s':\n",
        "      year = 2005\n",
        "      \n",
        "    if int(year) < 1975:\n",
        "      year = np.nan\n",
        "      \n",
        "    dates[i] = year\n",
        "    \n",
        "  return dates"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FeNwvs-o7TDG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def clean_size(size):\n",
        "  \"\"\"\n",
        "  take the size column, pull out height, width, depth, and diameter measurements. \n",
        "  Drop the existing size column and replace it with the new columns for height, \n",
        "  width, and depth\n",
        "  :param: size = list\n",
        "  return: lists = heigth, width, depth, and diameter as new columns in the \n",
        "  auction_history dataframe\n",
        "  \"\"\"\n",
        "  return"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZI9kfkGC7Qvu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def clean_estimate(estimate):\n",
        "  \"\"\"\n",
        "  takes the estimate column, adds low estimate, high estimate, and currency\n",
        "  columns to the dataframe and drops the original estimate column.\n",
        "  :param: estimate = list (df column)\n",
        "  returns: none, adds the columns and drop the column when called\n",
        "  \"\"\"\n",
        "  low = []\n",
        "  high = []\n",
        "  currency = []\n",
        "\n",
        "  for i in range(len(estimate)):\n",
        "    est = estimate[i]\n",
        "    try:\n",
        "      temp = est.split()\n",
        "      if len(temp) == 4:\n",
        "        low.append(temp[0])\n",
        "        high.append(temp[2])\n",
        "        currency.append(temp[3])\n",
        "      elif len(temp) == 2:\n",
        "        low.append(temp[0])\n",
        "        high.append(np.nan)\n",
        "        currency.append(temp[1])\n",
        "      else:\n",
        "        low.append(np.nan)\n",
        "        high.append(np.nan)\n",
        "        currency.append(np.nan)\n",
        "    except:\n",
        "      pass\n",
        "    \n",
        "  auction_history['Low Estimate'] = low\n",
        "  auction_history['High Estimate'] = high\n",
        "  auction_history['Currency'] = currency\n",
        "  auction_history.drop(['Estimate_Range'], axis=1, inplace=True)\n",
        "  return"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WwnnM7Ek7L4O",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def clean_realized_price(prices):\n",
        "  \"\"\"\n",
        "  takes realized prices from df and removes currency leaving just the numeric value\n",
        "  :param: prices = list, df column realized_price\n",
        "  return: list\n",
        "  \"\"\"\n",
        "  for i in range(len(prices)):\n",
        "    try:\n",
        "      temp = prices[i].split()\n",
        "      if len(temp) < 2:\n",
        "        prices[i] = -1\n",
        "      else:\n",
        "        prices[i] = temp[0]\n",
        "    except:\n",
        "      pass\n",
        "  \n",
        "  return prices"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-xTUVoROfIrc",
        "colab_type": "text"
      },
      "source": [
        "### Use cleaning functions to clean the columns in the dataframe"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RhdZ57U_o2YW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# use cleaning function to clean title column\n",
        "\n",
        "auction_history['Title'] = clean_auction_title(auction_history['Title'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j0jQ5b1vdRx1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# use cleaning function to clean the date created column\n",
        "auction_history['Date_Created'] = clean_date_created(auction_history['Date_Created'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t89KlPWc5G0X",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# use cleaning fucntion to clean estimate range column, drops estimate range and\n",
        "# adds a low and high estimate column with a currency column\n",
        "\n",
        "clean_estimate(auction_history['Estimate_Range'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pqkjb78N7fH-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# use cleaning function to remove currency code from realized prices, lots that\n",
        "# were withdrawn get a -1 value\n",
        "\n",
        "auction_history['Realized_Price'] = clean_realized_price(auction_history['Realized_Price'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YA7BQL8YfPck",
        "colab_type": "text"
      },
      "source": [
        "### Print out first few rows of the cleaned dataframe"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k-zJyExW0sKt",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 306
        },
        "outputId": "34ede7d7-8e94-4bb3-c2b0-60c02799b23e"
      },
      "source": [
        "auction_history.head()"
      ],
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Artist_Name</th>\n",
              "      <th>Title</th>\n",
              "      <th>Date_Created</th>\n",
              "      <th>Medium</th>\n",
              "      <th>Size</th>\n",
              "      <th>Signed_Edition</th>\n",
              "      <th>Realized_Price</th>\n",
              "      <th>Sale</th>\n",
              "      <th>Auction_House</th>\n",
              "      <th>Sale_Date</th>\n",
              "      <th>Low Estimate</th>\n",
              "      <th>High Estimate</th>\n",
              "      <th>Currency</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>SPOT DRAWING NO. 2</td>\n",
              "      <td>1990</td>\n",
              "      <td>coloured pencil on paper</td>\n",
              "      <td>84.1 by 59.7 cm. 33 1/8 by 23 1/2 in</td>\n",
              "      <td>Signed</td>\n",
              "      <td>175,000</td>\n",
              "      <td>Contemporary Art Day Auction</td>\n",
              "      <td>Sotheby's London</td>\n",
              "      <td>Jun. 27, 2018</td>\n",
              "      <td>80,000</td>\n",
              "      <td>120,000</td>\n",
              "      <td>GBP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>Supreme Skate Deck Red #7</td>\n",
              "      <td>1987</td>\n",
              "      <td>Color silkscreen on plywood in original</td>\n",
              "      <td>31.25 x 8 inches</td>\n",
              "      <td>from an edition of 500</td>\n",
              "      <td>450</td>\n",
              "      <td>Public Art Auction: Modern &amp; Contemporary Art,...</td>\n",
              "      <td>Santa Monica Auctions</td>\n",
              "      <td>Jun. 04, 2017</td>\n",
              "      <td>800</td>\n",
              "      <td>1,200</td>\n",
              "      <td>USD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>Supreme Skate Deck Yellow #6</td>\n",
              "      <td>1987</td>\n",
              "      <td>Color silkscreen on plywood in original bag</td>\n",
              "      <td>31.25 x 8 inches</td>\n",
              "      <td>from an edition of 500</td>\n",
              "      <td>475</td>\n",
              "      <td>Public Art Auction: Modern &amp; Contemporary Art,...</td>\n",
              "      <td>Santa Monica Auctions</td>\n",
              "      <td>Jun. 04, 2017</td>\n",
              "      <td>800</td>\n",
              "      <td>1,200</td>\n",
              "      <td>USD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>Pharmacy, cir</td>\n",
              "      <td>1990</td>\n",
              "      <td>offset lithograph printed in colours</td>\n",
              "      <td>216 x 216 mm (8 1/2 x 8 1/2 in)</td>\n",
              "      <td>42/200</td>\n",
              "      <td>1,500</td>\n",
              "      <td>Mixed Media: 20th Century Art</td>\n",
              "      <td>Dreweatts &amp; Bloomsbury Auctions, Bloomsbury House</td>\n",
              "      <td>Jul. 16, 2015</td>\n",
              "      <td>1,500</td>\n",
              "      <td>2,000</td>\n",
              "      <td>GBP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Damien Hirst</td>\n",
              "      <td>The Complete Spot Paintings, 198</td>\n",
              "      <td>2011</td>\n",
              "      <td>with butterfly and heart drawing on the slipca...</td>\n",
              "      <td>305 x 244mm</td>\n",
              "      <td>Signed</td>\n",
              "      <td>2,375</td>\n",
              "      <td>Prints &amp; Multiples</td>\n",
              "      <td>Bonhams Knightsbridge</td>\n",
              "      <td>Jun. 03, 2015</td>\n",
              "      <td>1,000</td>\n",
              "      <td>1,500</td>\n",
              "      <td>GBP</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Artist_Name                             Title  ... High Estimate Currency\n",
              "0  Damien Hirst                SPOT DRAWING NO. 2  ...       120,000      GBP\n",
              "1  Damien Hirst         Supreme Skate Deck Red #7  ...         1,200      USD\n",
              "2  Damien Hirst      Supreme Skate Deck Yellow #6  ...         1,200      USD\n",
              "3  Damien Hirst                     Pharmacy, cir  ...         2,000      GBP\n",
              "4  Damien Hirst  The Complete Spot Paintings, 198  ...         1,500      GBP\n",
              "\n",
              "[5 rows x 13 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z5k_mmhQJl2y",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "for i in range(len(auction_history['Currency'])):\n",
        "  try:\n",
        "    if '*' in auction_history['Currency'][i]:\n",
        "      auction_history['Currency'][i] = 'EUR'\n",
        "    if 'Sold' in auction_history['Currency'][i]:\n",
        "      auction_history['Currency'][i] = np.nan\n",
        "  except:\n",
        "    pass"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "emyBDjN1HX0N",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "outputId": "787af36c-c7a0-4713-88a1-71466d0e2e33"
      },
      "source": [
        "auction_history['Currency'].value_counts()"
      ],
      "execution_count": 159,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GBP    2908\n",
              "USD    1887\n",
              "EUR    1238\n",
              "HKD     121\n",
              "KRW      75\n",
              "CHF      67\n",
              "JPY      55\n",
              "AUD      48\n",
              "SEK      40\n",
              "CNY      28\n",
              "TWD      14\n",
              "NZD      13\n",
              "DKK      12\n",
              "NOK       7\n",
              "MXN       7\n",
              "ZAR       4\n",
              "SGD       4\n",
              "CZK       2\n",
              "Name: Currency, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 159
        }
      ]
    }
  ]
}